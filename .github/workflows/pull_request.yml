name: Pull request check
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  install_dependencies:
    name: Install node dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm i
  code_check:
    name: Prettier check
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: npm i
      - run: npm run prettier
  test_check:
    name: Tests check
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: npm i
      - run: npm run test:coverage
        env:
          SKYPE_USERNAME: ${{ secrets.SKYPE_ACCOUNT }}
          SKYPE_PASSWORD: ${{ secrets.SKYPE_PASSWORD }}
          SKYPE_ID: ${{ secrets.SKYPE_LIVE_ID }}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage
  quality_check_api:
    name: SonarCloud check
    runs-on: ubuntu-latest
    needs: test_check
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download code coverage results
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
          path: coverage
      - name: Display structure of working directory
        run: ls -R
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=sergiov85-github
            -Dsonar.projectKey=SergioV85_skype-http
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.sources=src/lib
            -Dsonar.test.inclusions=src/test/**/*.spec.ts
            -Dsonar.typescript.tsconfigPath=tsconfig.json
            -Dsonar.typescript.exclusions=**/node_modules/**,src/example/**,src/custom-typings/**
